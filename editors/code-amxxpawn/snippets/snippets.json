{
  "for loop": {
    "prefix": "for",
    "body": [
      "for (new ${1|i,client,player|} = ${2:0}; $1 <= ${3:MaxClients}; $1++)",
      "{",
      "\t${4:}",
      "}"
    ],
    "description": "for loop"
  },

  "while loop": {
    "prefix": "while",
    "body": ["while (${1:})", "{", "\t${2:}", "}"]
  },

  "do while loop": {
    "prefix": "do",
    "body": ["do", "{", "\t${2:}", "}", "while(${1:})"]
  },

  "if statement": {
    "prefix": "if",
    "body": ["if (${1:})", "{", "\t${2:}", "}"],
    "description": "if statement"
  },

  "else statement": {
    "prefix": "else",
    "body": ["else", "{", "\t${1:}", "}"],
    "description": "else statement"
  },

  "if else statement": {
    "prefix": "else if",
    "body": ["else if (${1:})", "{", "\t${2:}", "}"],
    "description": "else if statement"
  },

  "include statement": {
    "prefix": "#include",
    "body": ["#include "],
    "description": "include"
  },

  "pragma": {
    "prefix": "#pragma",
    "body": [
      "#pragma ${1|amxlimit,codepage,compress,ctrlchar,deprecated,dynamic,library,reqlib,reqclass,loadlib,explib,expclass,defclasslib,reqlib,reqclass,loadlib,explib,expclass,defclasslib,pack,rational,semicolon,tabsize,align,unused,showstackusageinfo|}"
    ],
    "description": "pragma"
  },

  "define": {
    "prefix": "#define",
    "body": ["#define ${1:defineName} ${2:defineValue}"],
    "description": "define"
  },

  "template": {
    "prefix": "!!template",
    "body": [
      "#include <amxmodx>",
      "",
      "",
      "public stock const PluginName[] = \"\";",
      "public stock const PluginVersion[] = \"\";",
      "public stock const PluginAuthor[] = \"\";",
      "public stock const PluginURL[] = \"\";",
      "public stock const PluginDescription[] = \"\";",
      "",
      "public plugin_init()",
      "{",
      "",
      "}"
    ],
    "description": "Plugin template"
  },

  "descriptive comment": {
    "prefix": "!!description",
    "body": [
      "/*----------------------------------------------",
      "-------------------${1:Description}------------------",
      "----------------------------------------------*/"
    ],
    "description": "Code description"
  }
}
