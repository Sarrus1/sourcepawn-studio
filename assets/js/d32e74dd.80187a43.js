"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[614],{9396:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=r(4848),s=r(8453);const o={id:"vscode-settings-reference",title:"VSCode Settings Reference"},i=void 0,l={id:"configuration/vscode-settings-reference",title:"VSCode Settings Reference",description:"AuthorName",source:"@site/docs/configuration/generated_vscode_settings.md",sourceDirName:"configuration",slug:"/configuration/vscode-settings-reference",permalink:"/sourcepawn-studio/docs/configuration/vscode-settings-reference",draft:!1,unlisted:!1,editUrl:"https://github.com/Sarrus1/sourcepawn-vscode/tree/main/docs/docs/docs/configuration/generated_vscode_settings.md",tags:[],version:"current",frontMatter:{id:"vscode-settings-reference",title:"VSCode Settings Reference"},sidebar:"docSidebar",previous:{title:"Server Settings Reference",permalink:"/sourcepawn-studio/docs/configuration/lsp-settings-reference"},next:{title:"Features",permalink:"/sourcepawn-studio/docs/features"}},a={},c=[{value:"AuthorName",id:"authorname",level:2},{value:"GithubName",id:"githubname",level:2},{value:"MainPathCompilation",id:"mainpathcompilation",level:2},{value:"showCompileIconInEditorTitleMenu",id:"showcompileiconineditortitlemenu",level:2},{value:"runServerCommandsAfterCompile",id:"runservercommandsaftercompile",level:2},{value:"serverCommands",id:"servercommands",level:2},{value:"uploadToServerAfterCompile",id:"uploadtoserveraftercompile",level:2},{value:"enableLinter",id:"enablelinter",level:2},{value:"availableAPIs",id:"availableapis",level:2},{value:"outputDirectoryPath",id:"outputdirectorypath",level:2},{value:"UploadOptions",id:"uploadoptions",level:2},{value:"SourceServerOptions",id:"sourceserveroptions",level:2},{value:"formatterSettings",id:"formattersettings",level:2},{value:"trace.server",id:"traceserver",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"authorname",children:"AuthorName"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.AuthorName"})}),"\n",(0,t.jsx)(n.p,{children:"The name of the plugin's author (you)."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ``"]}),"\n",(0,t.jsx)(n.h2,{id:"githubname",children:"GithubName"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.GithubName"})}),"\n",(0,t.jsx)(n.p,{children:"The GitHub username of the plugin's author (you)."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ``"]}),"\n",(0,t.jsx)(n.h2,{id:"mainpathcompilation",children:"MainPathCompilation"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.MainPathCompilation"})}),"\n",(0,t.jsx)(n.p,{children:"Whether the compile button always compiles the MainPath file (true) or the currently opened file (false)."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.h2,{id:"showcompileiconineditortitlemenu",children:"showCompileIconInEditorTitleMenu"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.showCompileIconInEditorTitleMenu"})}),"\n",(0,t.jsx)(n.p,{children:"Whether to show the 'Compile Code' icon in editor title menu."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.h2,{id:"runservercommandsaftercompile",children:"runServerCommandsAfterCompile"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.runServerCommandsAfterCompile"})}),"\n",(0,t.jsx)(n.p,{children:"Run RCON commands after compiling."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'"false"'})]}),"\n",(0,t.jsx)(n.h2,{id:"servercommands",children:"serverCommands"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.serverCommands"})}),"\n",(0,t.jsxs)(n.p,{children:["A list of commands that will be sent to the server after a successful VSCode command or on ",(0,t.jsx)(n.code,{children:"runServerCommands"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'["sm plugins refresh"]'})]}),"\n",(0,t.jsx)(n.h2,{id:"uploadtoserveraftercompile",children:"uploadToServerAfterCompile"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.uploadToServerAfterCompile"})}),"\n",(0,t.jsx)(n.p,{children:"Upload files to FTP/SFTP after compiling."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:"false"})]}),"\n",(0,t.jsx)(n.h2,{id:"enablelinter",children:"enableLinter"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.enableLinter"})}),"\n",(0,t.jsx)(n.p,{children:"Toggle the linter on or off."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:"true"})]}),"\n",(0,t.jsx)(n.h2,{id:"availableapis",children:"availableAPIs"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.availableAPIs"})}),"\n",(0,t.jsx)(n.p,{children:"Available Sourcemod APIs to quickly switch between them."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'[{"name":"","includeDirectories":[],"compilerPath":"","outputDirectoryPath":"","compilerArguments":[]}]'})]}),"\n",(0,t.jsx)(n.h2,{id:"outputdirectorypath",children:"outputDirectoryPath"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.outputDirectoryPath"})}),"\n",(0,t.jsxs)(n.p,{children:["The path to the output directory for the compiled .smx file. Ends with a ",(0,t.jsx)(n.code,{children:"/"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'""'})]}),"\n",(0,t.jsx)(n.h2,{id:"uploadoptions",children:"UploadOptions"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.UploadOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Upload options for the FTP/SFTP client."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'{"host":"","port":21,"username":"","password":"","sftp":false,"remoteRoot":"/tf/addons/sourcemod","exclude":["scripting/**/",".vscode/**/",".github/**/",".gitignore","*.md",".git"]}'})]}),"\n",(0,t.jsx)(n.h2,{id:"sourceserveroptions",children:"SourceServerOptions"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.SourceServerOptions"})}),"\n",(0,t.jsx)(n.p,{children:"Source server details to execute the commands on."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'{"host":"","port":27015,"encoding":"ascii","timeout":1000,"password":""}'})]}),"\n",(0,t.jsx)(n.h2,{id:"formattersettings",children:"formatterSettings"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.formatterSettings"})}),"\n",(0,t.jsx)(n.p,{children:"Settings for the formatter. Any setting supported by Clang Format can be used here."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'["AlignAfterOpenBracket: Align","AlignArrayOfStructures: Left","AlignConsecutiveAssignments: AcrossEmptyLinesAndComments","AlignConsecutiveBitFields: AcrossEmptyLinesAndComments","AlignConsecutiveDeclarations: AcrossEmptyLinesAndComments","AlignConsecutiveMacros: AcrossEmptyLinesAndComments","AlignEscapedNewlines: Left","AlignOperands: AlignAfterOperator","AlignTrailingComments: true","AllowAllArgumentsOnNextLine: true","AllowAllConstructorInitializersOnNextLine: true","AllowAllParametersOfDeclarationOnNextLine: true","AllowShortBlocksOnASingleLine: Always","AllowShortCaseLabelsOnASingleLine: true","AllowShortEnumsOnASingleLine: true","AllowShortFunctionsOnASingleLine: All","AllowShortIfStatementsOnASingleLine: AllIfsAndElse","AllowShortLambdasOnASingleLine: All","AllowShortLoopsOnASingleLine: false","AlwaysBreakAfterDefinitionReturnType: None","AlwaysBreakAfterReturnType: None","AlwaysBreakBeforeMultilineStrings: false","AlwaysBreakTemplateDeclarations: No","BasedOnStyle: Google","BinPackArguments: true","BinPackParameters: true","BreakBeforeBinaryOperators: NonAssignment","BreakBeforeBraces: Custom","BraceWrapping: { AfterCaseLabel: true","AfterClass: true","AfterControlStatement: Always","AfterEnum: true","AfterExternBlock: true","AfterFunction: true","AfterNamespace: true","AfterObjCDeclaration: false","AfterStruct: true","AfterUnion: true","BeforeCatch: true","BeforeElse: true","BeforeLambdaBody: true","BeforeWhile: true","IndentBraces: false","SplitEmptyFunction: false","SplitEmptyNamespace: false","SplitEmptyRecord: false }","BreakBeforeConceptDeclarations: false","BreakBeforeTernaryOperators: true","BreakConstructorInitializers: AfterColon","BreakInheritanceList: AfterComma","BreakStringLiterals: false","ColumnLimit: 0","CompactNamespaces: true","ConstructorInitializerAllOnOneLineOrOnePerLine: true","ConstructorInitializerIndentWidth: ${TabSize}","ContinuationIndentWidth: ${TabSize}","Cpp11BracedListStyle: false","EmptyLineBeforeAccessModifier: LogicalBlock","FixNamespaceComments: true","IncludeBlocks: Preserve","IndentAccessModifiers: false","IndentCaseBlocks: false","IndentCaseLabels: true","IndentExternBlock: Indent","IndentGotoLabels: false","IndentPPDirectives: BeforeHash","IndentRequires: true","IndentWidth: ${TabSize}","IndentWrappedFunctionNames: true","LambdaBodyIndentation: OuterScope","Language: Cpp","MaxEmptyLinesToKeep: 1","NamespaceIndentation: All","ObjCBinPackProtocolList: Always","ObjCBreakBeforeNestedBlockParam: false","ObjCSpaceBeforeProtocolList: false","ReflowComments: true","SortIncludes: Never","SpaceAfterCStyleCast: false","SpaceAfterLogicalNot: false","SpaceBeforeAssignmentOperators: true","SpaceBeforeCaseColon: false","SpaceBeforeCpp11BracedList: false","SpaceBeforeCtorInitializerColon: true","SpaceBeforeInheritanceColon: true","SpaceBeforeParens: ControlStatementsExceptControlMacros","SpaceBeforeRangeBasedForLoopColon: true","SpaceBeforeSquareBrackets: false","SpaceInEmptyBlock: false","SpaceInEmptyParentheses: false","SpacesBeforeTrailingComments: ${TabSize}","SpacesInConditionalStatement: false","SpacesInContainerLiterals: true","SpacesInCStyleCastParentheses: false","SpacesInParentheses: false","SpacesInSquareBrackets: false","Standard: Auto","TabWidth: ${TabSize}","UseTab: Always","CommentPragmas: \'^#define|#tryinclude\'"]'})]}),"\n",(0,t.jsx)(n.h2,{id:"traceserver",children:"trace.server"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"sourcepawn.trace.server"})}),"\n",(0,t.jsx)(n.p,{children:"Set the logging level of the SourcePawnLanguageServer."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:'"info"'})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);